//
//  MovieViewController.swift
//  MarvelViper
//
//  Created by Edgard Vargas on 19/08/23.
//  Copyright (c) 2023 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the StartApps CleanSwift Xcode Templates. V2.0
//  By Gabriel Lanata (http://StartApps.pe) with credit to http://clean-swift.com
//

import UIKit

class MovieViewController: UIViewController, UITableViewDataSource, UITableViewDelegate {

    var interactor: MovieInteractor!
    var router: MovieRouter!

    // MARK: - Object variables

    // NOTE: Only store objects here if required
    private var displayedSomethings: [MovieScene.fetchMovies.ViewModel.DisplayedSomething] = []

    // MARK: - Inteface objects

    @IBOutlet private weak var tableView: UITableView!
    // @IBOutlet private weak var somethingLabel: UILabel!

    // MARK: - View lifecycle

    override func viewDidLoad() {
        super.viewDidLoad()
        setupView()
        title = "Movie List"
        
        dofetchMovies()
    }

    func setupView() {
        // NOTE: Setup the view on load
        // somethingLabel.textColor = UIColor.blue
    }

    // MARK: - Interaction handling

    // @IBAction func buttonPressed() { ...

    // MARK: - Event handling

    func dofetchMovies() {
        // NOTE: Ask the Interactor to do some work
        // NOTE: Start loading animation here
        interactor.dofetchMovies(request: MovieScene.fetchMovies.Request())
    }

    // MARK: - Display logic

    func displayfetchMovies(viewModel: MovieScene.fetchMovies.ViewModel) {
        // NOTE: Display the result from the Presenter
        // NOTE: Stop loading animation here
        // displayedSomething = viewModel.displayedSomething
        // tableView.reloadData()
    }
    
    func displayAlertError(viewModel: MovieScene.AlertError.ViewModel) {
        // NOTE: Stop loading animation here
        let alert = UIAlertController(title: "Error", message: viewModel.message, preferredStyle: .alert)
        alert.addAction(UIAlertAction(title: "OK", style: .cancel, handler: nil))
        present(alert, animated: true, completion: nil)
    }

    // MARK: - TableView DataSource Methods

    func tableView(_ tableView: UITableView, numberOfRowsInSection section: Int) -> Int {
        return displayedSomethings.count
    }

    func tableView(_ tableView: UITableView, cellForRowAt indexPath: IndexPath) -> UITableViewCell {
        let displayedSomething = displayedSomethings[indexPath.row]
        let cell = tableView.dequeueReusableCell(withIdentifier: MovieTableViewCell.identifier, for: indexPath) as! MovieTableViewCell
        // cell.titleLabel.text = displayedSomething.title
        return cell
    }

    // MARK: - TableView Delegate Methods

    func tableView(_ tableView: UITableView, didSelectRowAt indexPath: IndexPath) {
        tableView.deselectRow(at: indexPath, animated: true)
    }

}
